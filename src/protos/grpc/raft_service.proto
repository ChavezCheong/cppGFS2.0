syntax = "proto3";

package protos.grpc;

service RaftService {
    // add more functions to the services
    rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesReply){}
    rpc RequestVote(RequestVoteRequest) returns (RequestVoteReply){}
}


message LogEntry {
    uint32 index = 1;
    uint32 term = 2;
    
    enum CommandType{
        CHUNK_UPDATE = 0;
        CHUNK_FAILURE = 1;
        CHUNK_LEASE_REQUEST = 2;
        CLIENT_NEW_FILE = 3;
        CLIENT_EDIT_FILE = 4;
        CLIENT_DELETE_FILE = 5;
    }
    CommandType command = 3;
    repeated string commandData = 4;
}

message AppendEntriesRequest {
    uint32 term = 1;
    uint32 leaderId = 2;
    uint32 prevLogIndex = 3;
    uint32 prevLogTerm = 4;
    repeated LogEntry entries = 5;
    uint32 leaderCommit = 6;
}

message AppendEntriesReply {
    uint32 term = 1;
    bool success = 2;
}

message RequestVoteRequest {
    uint32 term = 1;
    uint32 candidateId = 2;
    uint32 lastLogIndex = 3;
    uint32 lastLogTerm = 4;
}

message RequestVoteReply {
    uint32 term = 1;
    bool voteGranted = 2;
}
