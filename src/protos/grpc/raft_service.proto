syntax = "proto3";

package protos.grpc;
import "src/protos/grpc/master_metadata_service.proto";
import "google/protobuf/empty.proto";


service RaftService {
    // add more functions to the services
    rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesReply){}
    rpc RequestVote(RequestVoteRequest) returns (RequestVoteReply){}
}

service ClientService {
    rpc OpenFile(OpenFileRequest) returns (OpenFileReply) {}
    // Delete |filename|. This effectively deletes all associated file chunks.
    // If |filename| doesn't exist yet, an error status is returned.
    rpc DeleteFile(DeleteFileRequest) returns (google.protobuf.Empty) {}
}


message LogEntry {
    uint32 index = 1;
    uint32 term = 2;
    
    oneof command{
        OpenFileRequest open_file = 3;
        DeleteFileRequest delete_file = 4;
    }
}

message AppendEntriesRequest {
    uint32 term = 1;
    uint32 leaderId = 2;
    uint32 prevLogIndex = 3;
    uint32 prevLogTerm = 4;
    repeated LogEntry entries = 5;
    uint32 leaderCommit = 6;
}

message AppendEntriesReply {
    uint32 term = 1;
    bool success = 2;
}

message RequestVoteRequest {
    uint32 term = 1;
    uint32 candidateId = 2;
    uint32 lastLogIndex = 3;
    uint32 lastLogTerm = 4;
}

message RequestVoteReply {
    uint32 term = 1;
    uint32 voteGranted = 2;
}
